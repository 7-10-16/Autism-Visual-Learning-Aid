{"ast":null,"code":"import React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TouchableOpacity as TouchableOpacityGesture } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { styles } from \"./config/componentColourPalette.js\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport FruitScreen from \"./screens/FruitScreen\";\nimport AnimalScreen from \"./screens/AnimalScreen\";\nimport RandomScreen from \"./screens/RandomScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ExampleScreen from \"./screens/ExampleScreen\";\nimport PexelsApi from \"./api-pexels.js\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 26,\n        fontWeight: 'medium'\n      },\n      children: \"Welcome back\"\n    }), _jsx(Text, {\n      style: {\n        fontSize: 26,\n        fontWeight: 'medium',\n        color: '#00cc00'\n      },\n      children: \"USERNAME!\"\n    }), _jsxs(TouchableOpacity, {\n      style: styles.lightButton,\n      onPress: function onPress() {\n        navigation.navigate('Categories');\n      },\n      children: [_jsx(Text, {\n        style: {\n          margin: 10,\n          fontSize: 40\n        },\n        children: \"Quiz\"\n      }), _jsx(Ionicons, {\n        name: \"library-outline\",\n        size: 50,\n        style: styles.darkIcon\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        marginTop: '10%'\n      },\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.darkButton,\n        onPress: function onPress() {\n          navigation.navigate('Profile');\n        },\n        children: [_jsx(Text, {\n          style: {\n            margin: 10,\n            fontSize: 40\n          },\n          children: \"Profile\"\n        }), _jsx(Ionicons, {\n          name: \"ios-person-circle-outline\",\n          size: 50,\n          style: styles.lightIcon\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: styles.lightButton,\n        onPress: function onPress() {\n          navigation.navigate('Example');\n        },\n        children: [_jsx(Text, {\n          style: {\n            margin: 10,\n            fontSize: 40\n          },\n          children: \"Example\"\n        }), _jsx(Ionicons, {\n          name: \"library-outline\",\n          size: 50,\n          style: styles.darkIcon\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: styles.lightButton,\n        onClick: function onClick() {\n          navigation.navigate('PexelsApi');\n        },\n        children: [_jsx(Text, {\n          style: {\n            margin: 10,\n            fontSize: 40\n          },\n          children: \"API Test\"\n        }), _jsx(Ionicons, {\n          name: \"library-outline\",\n          size: 50,\n          style: styles.darkIcon\n        })]\n      })]\n    })]\n  });\n}\nfunction CategoriesScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      backgroundColor: '#003f5c'\n    },\n    children: [_jsxs(TouchableOpacity, {\n      style: styles.fruitButton,\n      onPress: function onPress() {\n        navigation.navigate('Fruit');\n      },\n      children: [_jsx(Text, {\n        style: styles.buttonText,\n        children: \"Fruit\"\n      }), _jsx(Ionicons, {\n        name: \"nutrition\",\n        size: 50,\n        style: styles.catIcon\n      })]\n    }), _jsxs(TouchableOpacity, {\n      style: styles.animalButton,\n      onPress: function onPress() {\n        navigation.navigate('Animal');\n      },\n      children: [_jsx(Text, {\n        style: styles.buttonText,\n        children: \"Animal\"\n      }), _jsx(Ionicons, {\n        name: \"paw\",\n        size: 50,\n        style: styles.catIcon\n      })]\n    }), _jsxs(TouchableOpacity, {\n      style: styles.randomButton,\n      onPress: function onPress() {\n        navigation.navigate('Random');\n      },\n      children: [_jsx(Text, {\n        style: styles.buttonText,\n        children: \"Random\"\n      }), _jsx(Ionicons, {\n        name: \"help\",\n        size: 50,\n        style: styles.catIcon\n      })]\n    }), _jsxs(TouchableOpacity, {\n      style: styles.cHomeButton,\n      onPress: function onPress() {\n        navigation.navigate('Home');\n      },\n      children: [_jsx(Text, {\n        style: styles.buttonText,\n        children: \"Home\"\n      }), _jsx(Ionicons, {\n        name: \"home\",\n        size: 50,\n        style: styles.catIcon\n      })]\n    })]\n  });\n}\nfunction HistoryScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"History Screen\"\n    }), _jsx(Button, {\n      title: \"Go to History... again\",\n      onPress: function onPress() {\n        return navigation.push('History');\n      }\n    }), _jsx(Button, {\n      title: \"Go Home\",\n      onPress: function onPress() {\n        return navigation.popToTop();\n      }\n    })]\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Categories\",\n        component: CategoriesScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Example\",\n        component: ExampleScreen\n      }), _jsx(Stack.Screen, {\n        name: \"PexelsApi\",\n        component: PexelsApi\n      }), _jsxs(Stack.Group, {\n        screenOptions: {\n          headerShown: false,\n          gestureEnabled: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Fruit\",\n          component: FruitScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Animal\",\n          component: AnimalScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Random\",\n          component: RandomScreen\n        })]\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen\n      }), _jsx(Stack.Screen, {\n        name: \"History\",\n        component: HistoryScreen\n      })]\n    })\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useState","TouchableOpacity","TouchableOpacityGesture","NavigationContainer","createNativeStackNavigator","styles","Ionicons","FruitScreen","AnimalScreen","RandomScreen","ProfileScreen","ExampleScreen","PexelsApi","HomeScreen","navigation","flex","alignItems","justifyContent","fontSize","fontWeight","color","lightButton","navigate","margin","darkIcon","flexDirection","marginTop","darkButton","lightIcon","CategoriesScreen","backgroundColor","fruitButton","buttonText","catIcon","animalButton","randomButton","cHomeButton","HistoryScreen","push","popToTop","Stack","App","headerShown","gestureEnabled"],"sources":["C:/Users/kornd/Tim/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, View, Text, TouchableOpacity } from 'react-native';\r\nimport { TouchableOpacity as TouchableOpacityGesture } from 'react-native-gesture-handler';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport { styles } from './config/componentColourPalette.js';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport FruitScreen from './screens/FruitScreen';\r\nimport AnimalScreen from './screens/AnimalScreen';\r\nimport RandomScreen from './screens/RandomScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ExampleScreen from './screens/ExampleScreen';\r\nimport PexelsApi from './api-pexels.js';\r\n\r\n//Starting screen of app FOR NOW\r\nfunction HomeScreen({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n    <Text style={{ fontSize: 26, fontWeight: 'medium' }}>Welcome back</Text>\r\n    <Text style={{fontSize: 26, fontWeight: 'medium', color: '#00cc00'}}>USERNAME!</Text>\r\n\r\n     <TouchableOpacity style ={styles.lightButton} onPress = {() => {navigation.navigate('Categories')}}>\r\n                <Text style={{margin: 10, fontSize: 40}}>Quiz</Text>\r\n                <Ionicons name='library-outline' size={50} style = {styles.darkIcon}></Ionicons>\r\n            </TouchableOpacity>\r\n\r\n            <View style={{flexDirection: 'row', marginTop: '10%'}}>\r\n                <TouchableOpacity style ={styles.darkButton} onPress = {() => {navigation.navigate('Profile')}}>\r\n                    <Text style={{margin: 10, fontSize: 40}}>Profile</Text>\r\n                    <Ionicons name='ios-person-circle-outline' size={50} style = {styles.lightIcon}></Ionicons>\r\n                </TouchableOpacity>\r\n\r\n            <TouchableOpacity style ={styles.lightButton} onPress = {() => {navigation.navigate('Example')}}>\r\n                <Text style={{margin: 10, fontSize: 40}}>Example</Text>\r\n                <Ionicons name='library-outline' size={50} style = {styles.darkIcon}></Ionicons>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style ={styles.lightButton} onClick = {() => {navigation.navigate('PexelsApi')}}>\r\n                <Text style={{margin: 10, fontSize: 40}}>API Test</Text>\r\n                <Ionicons name='library-outline' size={50} style = {styles.darkIcon}></Ionicons>\r\n            </TouchableOpacity>\r\n            </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction CategoriesScreen({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-start', backgroundColor:'#003f5c'}}>\r\n\r\n      <TouchableOpacity style ={styles.fruitButton} onPress = {() => {navigation.navigate('Fruit')}}>\r\n                <Text style={styles.buttonText}>Fruit</Text>\r\n                  <Ionicons name='nutrition' size={50} style = {styles.catIcon}></Ionicons>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style ={styles.animalButton} onPress = {() => {navigation.navigate('Animal')}}>\r\n                <Text style={styles.buttonText}>Animal</Text>\r\n                  <Ionicons name='paw' size={50} style = {styles.catIcon}></Ionicons>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style ={styles.randomButton} onPress = {() => {navigation.navigate('Random')}}>\r\n                <Text style={styles.buttonText}>Random</Text>\r\n                <Ionicons name='help' size={50} style = {styles.catIcon}></Ionicons>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style ={styles.cHomeButton} onPress = {() => {navigation.navigate('Home')}}>\r\n                <Text style={styles.buttonText}>Home</Text>\r\n                   <Ionicons name='home' size={50} style = {styles.catIcon}></Ionicons>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nfunction HistoryScreen({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>History Screen</Text>\r\n      <Button title=\"Go to History... again\"onPress={() => navigation.push('History')}/>\r\n      <Button title=\"Go Home\" onPress={() => navigation.popToTop()}/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Categories\" component={CategoriesScreen} />\r\n        <Stack.Screen name=\"Example\" component={ExampleScreen} />\r\n        <Stack.Screen name=\"PexelsApi\" component={PexelsApi} />\r\n          <Stack.Group screenOptions={{headerShown: false, gestureEnabled: false}}>\r\n            <Stack.Screen name=\"Fruit\" component={FruitScreen} />\r\n            <Stack.Screen name=\"Animal\" component={AnimalScreen} />\r\n            <Stack.Screen name=\"Random\" component={RandomScreen} />\r\n          </Stack.Group>\r\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n        <Stack.Screen name=\"History\" component={HistoryScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}