{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar test = \"test\";\nvar test2 = 18 + 24;\nvar answer = 'this one';\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var questions = [{\n    questionText: answer,\n    answerOptions: [{\n      answerText: test,\n      isCorrect: false\n    }, {\n      answerText: test2,\n      isCorrect: false\n    }, {\n      answerText: answer,\n      isCorrect: true\n    }, {\n      answerText: 'Pizza üçï',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'üçë',\n    answerOptions: [{\n      answerText: 'Apple üçé',\n      isCorrect: false\n    }, {\n      answerText: 'Peach üçë',\n      isCorrect: true\n    }, {\n      answerText: 'Dog üê∂',\n      isCorrect: false\n    }, {\n      answerText: 'Carrot ü•ï',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'üçå',\n    answerOptions: [{\n      answerText: 'Banana üçå',\n      isCorrect: true\n    }, {\n      answerText: 'Noodles üçú',\n      isCorrect: false\n    }, {\n      answerText: 'Grapes üçá',\n      isCorrect: false\n    }, {\n      answerText: 'Blood ü©∏',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'üçì',\n    answerOptions: [{\n      answerText: 'Cherry üçí',\n      isCorrect: false\n    }, {\n      answerText: 'Apple üçé',\n      isCorrect: false\n    }, {\n      answerText: 'Bug üêõ',\n      isCorrect: false\n    }, {\n      answerText: 'Strawberry üçì',\n      isCorrect: true\n    }]\n  }];\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestion = _useState2[0],\n    setCurentQuestion = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showScore = _useState4[0],\n    setShowScore = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    score = _useState6[0],\n    setScore = _useState6[1];\n  var handleAnswerButtonClick = function handleAnswerButtonClick(isCorrect) {\n    if (isCorrect === true) {\n      alert(\"RIGHT ANSWER!\");\n      setScore(score + 1);\n    } else {\n      alert(\"WRONG!\");\n    }\n    var nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: showScore ? _jsxs(View, {\n      children: [_jsxs(Text, {\n        children: [\"You scored \", score, \" out of \", questions.length]\n      }), _jsx(Button, {\n        title: \"Try Again?\",\n        onPress: function onPress() {\n          return navigation.navigate('Categories');\n        }\n      }), _jsx(Button, {\n        title: \"Home\",\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        }\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsxs(Text, {\n        children: [_jsxs(Text, {\n          children: [\"What is this? \", currentQuestion + 1, \" / \", questions.length, \"\\n\"]\n        }), _jsx(Text, {\n          children: questions[currentQuestion].questionText\n        })]\n      }), _jsx(Text, {\n        children: questions[currentQuestion].answerOptions.map(function (answerOption) {\n          return _jsxs(Text, {\n            onPress: function onPress() {\n              return handleAnswerButtonClick(answerOption.isCorrect);\n            },\n            children: [answerOption.answerText, \"\\n\"]\n          }, answerOption.answerText);\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","test","test2","answer","HomeScreen","navigation","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurentQuestion","showScore","setShowScore","score","setScore","handleAnswerButtonClick","alert","nextQuestion","length","flex","alignItems","justifyContent","navigate","map","answerOption"],"sources":["C:/Users/kornd/Tim/screens/FruitScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, View, Text } from 'react-native';\r\n\r\nvar test = \"test\";\r\nvar test2 = 18+24;\r\nvar answer = 'this one';\r\n\r\n\r\n\r\nexport default function HomeScreen({ navigation }) {\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: answer,\r\n\t\t\t\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: test, isCorrect: false },\r\n\t\t\t\t{ answerText: test2, isCorrect: false },\r\n\t\t\t\t{ answerText: answer, isCorrect: true },\r\n\t\t\t\t{ answerText: 'Pizza üçï', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'üçë',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple üçé', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Peach üçë', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dog üê∂', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Carrot ü•ï', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'üçå',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Banana üçå', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Noodles üçú', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Grapes üçá', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Blood ü©∏', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'üçì',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Cherry üçí', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Apple üçé', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Bug üêõ', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Strawberry üçì', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst [currentQuestion, setCurentQuestion] = useState(0);\r\n\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerButtonClick = (isCorrect) => {\r\n\t\tif(isCorrect === true){\r\n\t\t\talert(\"RIGHT ANSWER!\");\r\n\t\t\tsetScore(score +1);\r\n\t\t}\r\n\t\telse{\r\n\t\t\talert(\"WRONG!\")\r\n\t\t}\r\n\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif(nextQuestion <questions.length){\r\n\t\t\t\t\tsetCurentQuestion(nextQuestion);\r\n\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    \r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n        {}\r\n        {showScore ? (\r\n            <View>\r\n    <Text>You scored {score} out of {questions.length}</Text>\r\n\t<Button title=\"Try Again?\" onPress={() => navigation.navigate('Categories')} />\r\n\t<Button title=\"Home\" onPress={() => navigation.navigate('Home')} />\r\n    </View>\r\n        ) : (\r\n            <>\r\n                <Text>\r\n                    <Text>What is this? {currentQuestion+1} / {questions.length}{\"\\n\"}</Text>\r\n                    <Text>{questions[currentQuestion].questionText}</Text>\r\n                </Text>\r\n                <Text>\r\n                     {questions[currentQuestion].answerOptions.map((answerOption)=>\r\n                     <Text key={answerOption.answerText} onPress={()=>handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}{\"\\n\"}</Text>)}\r\n                </Text>\r\n            </>\r\n        )}\r\n    </View>\r\n);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}