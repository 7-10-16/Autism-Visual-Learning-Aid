{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createClient } from 'pexels';\nimport axios from 'axios';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PexelsApi(_ref) {\n  var navigation = _ref.navigation;\n  var client = createClient('563492ad6f91700001000001a783e5f426914ffbae822164d5f56516');\n  var query1 = 'Strawberries';\n  var query2 = 'Peaches';\n  var query3 = 'Bananas';\n  var resStrawberries, resPeaches, resBananas;\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    photos = _React$useState2[0],\n    photosSet = _React$useState2[1];\n\n  client.photos.search({\n    query: query1,\n    per_page: 8\n  }).then(function (photos) {\n    resStrawberries = JSON.parse(photos);\n    console.log(resStrawberries);\n  });\n\n  var photosPost = function photosPost() {\n    resStrawberries.forEach(function (element) {\n      var name = 'strawberry';\n      var url = element.src.tiny;\n      var category = 1;\n\n      axios.post('https://node-server-udw2.onrender.com/apipost', {\n        name: name,\n        img: url,\n        category: category\n      }).then(function () {\n        console.log(\"success\");\n      });\n    });\n  };\n\n  var photosGet = function photosGet() {\n    axios.get('https://node-server-udw2.onrender.com/apiget').then(function (response) {\n      console.log(response.data);\n      photosSet(response.data);\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Button, {\n      onPress: photosPost,\n      title: \"Request photos\",\n      color: \"#841584\"\n    }), _jsx(Button, {\n      onPress: photosGet,\n      title: \"Get Photos\",\n      color: \"#841584\"\n    }), _jsx(Text, {\n      children: photos.map(function (photo) {\n        return _jsx(\"img\", {\n          src: photo.object_img\n        });\n      })\n    })]\n  });\n}","map":{"version":3,"names":["createClient","axios","React","PexelsApi","navigation","client","query1","query2","query3","resStrawberries","resPeaches","resBananas","useState","photos","photosSet","search","query","per_page","then","JSON","parse","console","log","photosPost","forEach","element","name","url","src","tiny","category","post","img","photosGet","get","response","data","flex","alignItems","justifyContent","map","photo","object_img"],"sources":["C:/Users/kornd/Tim/api-pexels.js"],"sourcesContent":["import { createClient } from 'pexels';\r\nimport axios from 'axios';\r\nimport * as React from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\n\r\nexport default function PexelsApi({navigation}){\r\n\r\n    const client = createClient('563492ad6f91700001000001a783e5f426914ffbae822164d5f56516');\r\n    const query1 = 'Strawberries';\r\n    const query2 = 'Peaches';\r\n    const query3 = 'Bananas';\r\n    let resStrawberries, resPeaches, resBananas;\r\n    const [photos, photosSet] = React.useState([]);\r\n\r\n    // All requests made with the client will be authenticated\r\n\r\n    client.photos.search({ query:query1, per_page: 8 }).then(photos => {resStrawberries = JSON.parse(photos);\r\n        console.log(resStrawberries);\r\n    });\r\n    //client.photos.search({ query2, per_page: 8 }).then(photos => {resPeaches = photos});\r\n    //client.photos.search({ query3, per_page: 8 }).then(photos => {resBananas = photos});\r\n    \r\n    //let jPeaches = JSON.parse(resPeaches);\r\n    //let jBananas = JSON.parse(resBananas);\r\n\r\n\r\n    const photosPost = () => {\r\n\r\n        resStrawberries.forEach(element => {\r\n            let name = 'strawberry';\r\n            let url = element.src.tiny;\r\n            let category = 1;               //Category 1 = 'Fruit'\r\n\r\n            axios.post('https://node-server-udw2.onrender.com/apipost', {\r\n                name : name,\r\n                img : url,\r\n                category : category\r\n            }).then(() => {\r\n                console.log(\"success\");\r\n            });\r\n        });\r\n        /*\r\n        jPeaches.forEach(element => {\r\n            let name = 'peach';\r\n            let url = element.src.tiny;\r\n            let category = 1;\r\n\r\n            axios.post('https://node-server-udw2.onrender.com/apipost', {\r\n                name : name,\r\n                img : url,\r\n                category : category\r\n            }).then(() => {\r\n                console.log(\"success\");\r\n            });\r\n        });\r\n\r\n        jBananas.forEach(element => {\r\n            let name = 'banana';\r\n            let url = element.src.tiny;\r\n            let category = 1;\r\n\r\n            axios.post('https://node-server-udw2.onrender.com/apipost', {\r\n                name : name,\r\n                img : url,\r\n                category : category\r\n            }).then(() => {\r\n                console.log(\"success\");\r\n            });\r\n        });\r\n        */\r\n    }\r\n\r\n    const photosGet = () => {\r\n        axios.get('https://node-server-udw2.onrender.com/apiget').then((response) => {\r\n            console.log(response.data);\r\n            photosSet(response.data);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n        <Button\r\n                onPress={photosPost}\r\n                title=\"Request photos\"\r\n                color=\"#841584\"\r\n            />\r\n            <Button\r\n                onPress={photosGet}\r\n                title=\"Get Photos\"\r\n                color=\"#841584\"\r\n            />\r\n\r\n            <Text>\r\n                {photos.map(photo => {\r\n                    return (\r\n                        <img src={photo.object_img}></img>\r\n                        )\r\n                })}\r\n            </Text>   \r\n        </View>\r\n    )\r\n\r\n}"],"mappings":";AAAA,SAASA,YAAY,QAAQ,QAAQ;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAG/B,eAAe,SAASC,SAAS,OAAc;EAAA,IAAZC,UAAU,QAAVA,UAAU;EAEzC,IAAMC,MAAM,GAAGL,YAAY,CAAC,0DAA0D,CAAC;EACvF,IAAMM,MAAM,GAAG,cAAc;EAC7B,IAAMC,MAAM,GAAG,SAAS;EACxB,IAAMC,MAAM,GAAG,SAAS;EACxB,IAAIC,eAAe,EAAEC,UAAU,EAAEC,UAAU;EAC3C,sBAA4BT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCC,MAAM;IAAEC,SAAS;;EAIxBT,MAAM,CAACQ,MAAM,CAACE,MAAM,CAAC;IAAEC,KAAK,EAACV,MAAM;IAAEW,QAAQ,EAAE;EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,UAAAL,MAAM,EAAI;IAACJ,eAAe,GAAGU,IAAI,CAACC,KAAK,CAACP,MAAM,CAAC;IACpGQ,OAAO,CAACC,GAAG,CAACb,eAAe,CAAC;EAChC,CAAC,CAAC;;EAQF,IAAMc,UAAU,GAAG,SAAbA,UAAU,GAAS;IAErBd,eAAe,CAACe,OAAO,CAAC,UAAAC,OAAO,EAAI;MAC/B,IAAIC,IAAI,GAAG,YAAY;MACvB,IAAIC,GAAG,GAAGF,OAAO,CAACG,GAAG,CAACC,IAAI;MAC1B,IAAIC,QAAQ,GAAG,CAAC;;MAEhB7B,KAAK,CAAC8B,IAAI,CAAC,+CAA+C,EAAE;QACxDL,IAAI,EAAGA,IAAI;QACXM,GAAG,EAAGL,GAAG;QACTG,QAAQ,EAAGA;MACf,CAAC,CAAC,CAACZ,IAAI,CAAC,YAAM;QACVG,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MAC1B,CAAC,CAAC;IACN,CAAC,CAAC;EA8BN,CAAC;;EAED,IAAMW,SAAS,GAAG,SAAZA,SAAS,GAAS;IACpBhC,KAAK,CAACiC,GAAG,CAAC,8CAA8C,CAAC,CAAChB,IAAI,CAAC,UAACiB,QAAQ,EAAK;MACzEd,OAAO,CAACC,GAAG,CAACa,QAAQ,CAACC,IAAI,CAAC;MAC1BtB,SAAS,CAACqB,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC;EAED,OACI,MAAC,IAAI;IAAC,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAA,WACzE,KAAC,MAAM;MACC,OAAO,EAAEhB,UAAW;MACpB,KAAK,EAAC,gBAAgB;MACtB,KAAK,EAAC;IAAS,EACjB,EACF,KAAC,MAAM;MACH,OAAO,EAAEU,SAAU;MACnB,KAAK,EAAC,YAAY;MAClB,KAAK,EAAC;IAAS,EACjB,EAEF,KAAC,IAAI;MAAA,UACApB,MAAM,CAAC2B,GAAG,CAAC,UAAAC,KAAK,EAAI;QACjB,OACI;UAAK,GAAG,EAAEA,KAAK,CAACC;QAAW,EAAO;MAE1C,CAAC;IAAC,EACC;EAAA,EACJ;AAGf"},"metadata":{},"sourceType":"module"}